name: Prod CI/CD

on:
  push:
    branches:
      - 'master'


jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Build
        run: cargo build
      - name: Test
        run: cargo test
      - name: Lint
        run: |
          rustup component add rustfmt
          rustup component add clippy
          cargo fmt -- --check
          cargo clippy
  deploy_api_service:
    needs: build_and_test
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v2

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Build container images
        run: docker build -t registry.digitalocean.com/cards/api_service:$(echo $GITHUB_SHA | head -c7) -f api_service.Dockerfile .

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200

      - name: Push images to DigitalOcean Container Registry
        run: docker push registry.digitalocean.com/cards/api_service:$(echo $GITHUB_SHA | head -c7)

      - name: Update deployment files
        run: |
          TAG=$(echo $GITHUB_SHA | head -c7)
          sed -i 's|<IMAGE>|registry.digitalocean.com/cards/api_service:'${TAG}'|' $GITHUB_WORKSPACE/api_service.deployment.yml
          sed -i 's|<MONGO_URI>|'${MONGO_URI}'|' $GITHUB_WORKSPACE/api_service.deployment.yml
          sed -i 's|<MONGO_URI>|\&|' ./api_service.deployment.yml
          sed -i 's|<SONIC_URI>|'${SONIC_URI}'|' $GITHUB_WORKSPACE/api_service.deployment.yml
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
          SONIC_URI: ${{ secrets.SONIC_URI }}

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 cards

      - name: Deploy to DigitalOcean Kubernetes
        run: kubectl apply -f $GITHUB_WORKSPACE/api_service.deployment.yml

      - name: Verify deployment
        run: kubectl rollout status deployment/api
  deploy_game_service:
    needs: build_and_test
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v2

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Build container images
        run: docker build -t registry.digitalocean.com/cards/game_service:$(echo $GITHUB_SHA | head -c7) -f game_service.Dockerfile .

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200

      - name: Push images to DigitalOcean Container Registry
        run: docker push registry.digitalocean.com/cards/game_service:$(echo $GITHUB_SHA | head -c7)

      - name: Update deployment files
        run: |
          TAG=$(echo $GITHUB_SHA | head -c7)
          sed -i 's|<IMAGE>|registry.digitalocean.com/cards/game_service:'${TAG}'|' $GITHUB_WORKSPACE/game_service.deployment.yml
          sed -i 's|<AMQP_URI>|'${AMQP_URI}'|' $GITHUB_WORKSPACE/game_service.deployment.yml
          sed -i 's|<API_URI>|'${API_URI}'|' $GITHUB_WORKSPACE/game_service.deployment.yml
        env:
          AMQP_URI: ${{ secrets.AMQP_URI }}
          API_URI: ${{ secrets.API_URI }}

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 cards

      - name: Deploy to DigitalOcean Kubernetes
        run: kubectl apply -f $GITHUB_WORKSPACE/game_service.deployment.yml

      - name: Verify deployment
        run: kubectl rollout status deployment/game
